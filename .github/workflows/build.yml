name: SonarCloud
on:
  push:
    branches:
      - feature*
      - fb-*
      - master
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - reopened
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
      - name: Install Dotnet Coverage
        run: |
          dotnet tool install --global dotnet-coverage
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          dotnet sonarscanner begin /k:"sonar-poc-org_pocproject2" /o:"sonar-poc-org"
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.host.url="https://sonarcloud.io"
          /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
      - name: Build
        run: dotnet build
      - name: Run Tests
        run: dotnet test --no-build --verbosity normal
      - name: Collect Coverage
        run: dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
      - name: Sonar Scanner End
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
